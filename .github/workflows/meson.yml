name: Meson CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - {
            name: Windows MSVC Release,
            os: windows-latest,
            msvc: true,
            buildtype: release,
            args: '-Ddefault_library=static --wrap-mode=forcefallback'
          }
          - {
            name: Windows MinGW Release,
            os: windows-latest,
            msvc: false,
            buildtype: release,
            args: ''
          }
          - {
            name: Ubuntu Debug,
            os: ubuntu-latest,
            buildtype: debugoptimized,
            args: ''
          }
          - {
            name: Ubuntu Release,
            os: ubuntu-latest,
            buildtype: release,
            args: ''
          }
          - {
            name: macOS Debug,
            os: macos-latest,
            buildtype: debugoptimized,
            args: ''
          }
          - {
            name: macOS Release,
            os: macos-latest,
            buildtype: release,
            args: -Ddefault_library=static
          }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Setup Meson
        run: |
          python -m pip install --upgrade pip
          pip install meson

      - name: Setup MSVC
        if: matrix.config.os == 'windows-latest' && matrix.config.msvc == true
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies (Windows)
        if: matrix.config.os == 'windows-latest'
        run: choco install ninja

      - name: Install dependencies (MacOS)
        if: matrix.config.os == 'macos-latest'
        run: brew install nasm ninja

      - name: Install dependencies (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build build-essential pkg-config libfreetype6-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev

      - name: Configure
        run: meson build ${{ matrix.config.args }} -Dbuildtype=${{ matrix.config.buildtype }}

      - name: Build
        run: meson compile -C build
